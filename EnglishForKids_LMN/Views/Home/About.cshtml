@*@{
        ViewBag.Title = "About";
    }
    <h2>@ViewBag.Title.</h2>
    <h3>@ViewBag.Message</h3>

    <p>Use this area to provide additional information.</p>*@












<!DOCTYPE html>
<html>

<head>
    <title>Talking Tom Cat Game</title>
    <style>
        #cat-container {
            position: relative;
            width: 200px;
            height: 200px;
        }

        #cat-image {
            width: 100%;
            height: auto;
        }

        #speech-bubble {
            position: absolute;
            top: -60px;
            left: 50%;
            transform: translateX(-50%);
            background-color: #ffffff;
            border: 1px solid #000000;
            border-radius: 10px;
            padding: 10px;
            display: none;
        }

        #speech-text {
            margin: 0;
            text-align: center;
        }

        #record-btn,
        #stop-btn {
            margin-top: 10px;
        }
    </style>
</head>

<body>
    <div id="cat-container">
        <img id="cat-image"
             src="https://media0.giphy.com/media/VbnUQpnihPSIgIXuZv/giphy.gif?cid=6c09b9523d14dceprs4x3ke5sjwfta01mcy92bi0xbm16e08&ep=v1_gifs_search&rid=giphy.gif&ct=g"
             alt="Cat Image" style="width: 30%;">
        <div id="speech-bubble">
            <p id="speech-text"></p>
        </div>
    </div>

    <button id="record-btn">Ghi âm</button>
    <button id="stop-btn" disabled>Dừng ghi âm</button>

    <script>
        var catImage = document.getElementById('cat-image');
        var speechBubble = document.getElementById('speech-bubble');
        var speechText = document.getElementById('speech-text');
        var recordButton = document.getElementById('record-btn');
        var stopButton = document.getElementById('stop-btn');
        var mediaRecorder;
        var recordedChunks = [];
        var synthesizer = window.speechSynthesis;

        recordButton.addEventListener('click', startRecording);
        stopButton.addEventListener('click', stopRecording);

        function startRecording() {
            navigator.mediaDevices.getUserMedia({ audio: true })
                .then(function (stream) {
                    mediaRecorder = new MediaRecorder(stream);
                    mediaRecorder.addEventListener('dataavailable', handleDataAvailable);
                    mediaRecorder.start();

                    recordButton.disabled = true;
                    stopButton.disabled = false;
                })
                .catch(function (err) {
                    console.error('Lỗi truy cập thiết bị ghi âm: ', err);
                });
        }

        function handleDataAvailable(event) {
            if (event.data && event.data.size > 0) {
                recordedChunks.push(event.data);
            }
        }

        function stopRecording() {
            mediaRecorder.stop();
            recordButton.disabled = false;
            stopButton.disabled = true;

            var blob = new Blob(recordedChunks, { type: 'audio/webm' });
            var audio = new Audio(URL.createObjectURL(blob));

            audio.onended = function () {
                var speechText = 'Xin chào! Tôi là Talking Cat.';
                var speechUtterance = new SpeechSynthesisUtterance(speechText);

                // Thay đổi giọng nói ở đây
                speechUtterance.voice = getVoice('your-preferred-voice'); // Thay 'your-preferred-voice' bằng giọng nói mong muốn

                synthesizer.speak(speechUtterance);
            };

            audio.play();

            showSpeechBubble('Đang phát âm thanh...');
        }

        function showSpeechBubble(text) {
            speechText.textContent = text;
            speechBubble.style.display = 'block';

            setTimeout(function () {
                speechBubble.style.display = 'none';
            }, 3000);
        }

        function getVoice(voiceName) {
            var voices = synthesizer.getVoices();

            for (var i = 0; i < voices.length; i++) {
                if (voices[i].name === voiceName) {
                    return voices[i];
                }
            }

            return null;
        }



    </script>
</body>

</html>