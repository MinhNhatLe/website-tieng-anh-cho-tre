@model EnglishForKids_LMN.Models.Question
@{ ViewBag.Title = "Create Question - English For Kids";
    EnglishForKids_LMN.Models.English_LearningEntities db = new EnglishForKids_LMN.Models.English_LearningEntities();
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    if (Session["ID_User"] == null && Session["Admin_Code"] == null)
    {
        Response.Redirect("~/Login/SignIn");
    }
}
<style>
    .text-danger {
        color: red;
    }

    .background-test-createT {
        padding: 20px;
        background-color: #fff;
        border: 10px; /* Viền của cái khối */
        border-color: rgb(0 0 0 / 2%);
        border-style: solid;
        margin-top: 10px;
        margin-bottom: 10px;
        border-radius: 20px;
        box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
    }
</style>
<div class="container">
    <div class="row">
        <div class="col-lg-12 col-sm-12 col-xs-12">
            <div class="border-title">
                <div class="container_title">
                    <h2 class="title" style="font-size:37px">
                        <span class="title-word title-word-1">Q</span>
                        <span class="title-word title-word-2">U</span>
                        <span class="title-word title-word-3">E</span>
                        <span class="title-word title-word-4">S</span>
                        <span class="title-word title-word-1">T</span>
                        <span class="title-word title-word-2">I</span>
                        <span class="title-word title-word-3">O</span>
                        <span class="title-word title-word-4">N</span>
                    </h2>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class="row background-test-createT">
        <div class="row">
            <div class="col-lg-2 col-sm-0 col-xs-0">

            </div>
            <div class="col-lg-8 col-sm-12 col-xs-12">
                <div class="row">
                    <div class="col-lg-12 col-sm-12 col-xs-12">
                        <div class="text-center" style="background-color:antiquewhite">
                            <h2 class="animate-charcter" style="text-transform: uppercase; text-align: center; font-size: 30px; font-weight: 700;">
                                Create new question
                            </h2>
                        </div>

                        <br />
                        <hr />

                    </div>
                    <hr />
                    <div class="col-lg-12 col-sm-12 col-xs-12">
                        @using (Html.BeginForm("Create_Question", "Test", FormMethod.Post))
                        {
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                <p>
                                    <strong>Content</strong>
                                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                                    @Html.EditorFor(model => model.Content, "", new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter test name...", @minlength = "2", @maxlength = "50", @autofocus = "autofocus", @required = "required" } })
                                </p>
                                <p>
                                    <strong>Type question</strong>
                                    @Html.ValidationMessageFor(model => model.Type_Question, "", new { @class = "text-danger" })
                                    @*@Html.EditorFor(model => model.Type_Question, "", new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter test name...", @minlength = "1", @maxlength = "14", @autofocus = "autofocus", @required = "required" } })*@
                                    <select id="Type_Question" name="Type_Question" class="form-control center-block" style="width:100%;max-width:100%;" required>
                                        @*<option for="Type_Question" id="Type_Question" name="Type_Question" selected hidden>@Html.ValueFor(model => model.Type_Question)</option>*@
                                        <option for="Type_Question" id="Type_Question" name="Type_Question" selected value="multipe-choice">multipe-choice</option>
                                        <option for="Type_Question" id="Type_Question" name="Type_Question" value="text">text</option>
                                        <option for="Type_Question" id="Type_Question" name="Type_Question" value="paragraph">paragraph</option>
                                        <option for="Type_Question" id="Type_Question" name="Type_Question" value="video">video</option>
                                    </select>
                                </p>
                                <p>
                                    <strong>Answer 1</strong>
                                    @Html.ValidationMessageFor(model => model.Answer_Content1, "", new { @class = "text-danger" })
                                    @Html.EditorFor(model => model.Answer_Content1, "", new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter test name...", @minlength = "1", @maxlength = "30", @autofocus = "autofocus", @required = "required" } })
                                </p>
                                <p>
                                    <strong>Answer 2</strong>
                                    @Html.ValidationMessageFor(model => model.Answer_Content2, "", new { @class = "text-danger" })
                                    @Html.EditorFor(model => model.Answer_Content2, "", new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter test name...", @minlength = "1", @maxlength = "30", @autofocus = "autofocus", @required = "required" } })
                                </p>
                                <p>
                                    <strong>Answer 3</strong>
                                    @Html.ValidationMessageFor(model => model.Answer_Content3, "", new { @class = "text-danger" })
                                    @Html.EditorFor(model => model.Answer_Content3, "", new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter test name...", @minlength = "1", @maxlength = "30", @autofocus = "autofocus", @required = "required" } })
                                </p>
                                <p>
                                    <strong>Answer 4</strong>
                                    @Html.ValidationMessageFor(model => model.Answer_Content4, "", new { @class = "text-danger" })
                                    @Html.EditorFor(model => model.Answer_Content4, "", new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter test name...", @minlength = "1", @maxlength = "30", @autofocus = "autofocus", @required = "required" } })
                                </p>
                                <p>
                                    <strong>Answer correct</strong>
                                    @Html.ValidationMessageFor(model => model.Answer_Correct, "", new { @class = "text-danger" })
                                    @Html.EditorFor(model => model.Answer_Correct, "", new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter test name...", @minlength = "1", @maxlength = "30", @autofocus = "autofocus", @required = "required" } })
                                </p>
                                <p>
                                    <strong>Name test</strong>
                                    @Html.ValidationMessageFor(model => model.ID_Test, "", new { @class = "text-danger" })
                                    @*@Html.EditorFor(model => model.ID_Test, "", new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter test name...", @minlength = "1", @maxlength = "3", @autofocus = "autofocus", @required = "required" } })*@
                                    <select class="form-control" style="width:100%;" name="ID_Test">
                                        @foreach (var item in db.Tests.ToList())
                                        {
                                            <option value="@item.ID_Test">@item.Name_Test</option>
                                        }
                                    </select>
                                </p>
                            </div>
                            <div class="row">
                                <div class="col-lg-2 col-sm-2 col-xs-0">

                                </div>
                                <div class="col-lg-8 col-sm-8 col-xs-12">

                                    <input type="submit" name="Create_Question" value="Add new question" class="btn btn-primary bx-flashing-hover center-block" style="width:100%;" />
                                </div>
                                <div class="col-lg-2 col-sm-2 col-xs-0">

                                </div>

                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="col-lg-2 col-sm-0 col-xs-0">

            </div>
        </div>
    </div>
    <br />
</div>
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>


