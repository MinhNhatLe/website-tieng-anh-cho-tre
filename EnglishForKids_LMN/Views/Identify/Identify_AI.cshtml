@model EnglishForKids_LMN.Models.Google
@{ ViewBag.Title = "Identify AI - English For Kids";
    if (Session["ID_User"] != null)
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    if (Session["Admin_Code"] != null)
    {
        Response.Redirect("~/Home/HomePage");
    }
    if (Session["ID_User"] == null && Session["Admin_Code"] == null)
    {
        Response.Redirect("~/Login/SignIn");
    }
}

<style>
    .background_identify {
        margin-top: 50px;
        margin-bottom: 50px;
        padding: 30px;
        background-color: azure;
        border-radius: 20px;
    }

    .btn-open {
        color: #fff;
        box-shadow: 0 1px 1px rgb(0 0 0 / 9%);
        font-size: 20px;
        width: 400px;
        height: 60px;
        cursor: pointer;
        border-radius: 10px;
        outline-style: inherit;
        outline-color: aqua;
        margin-top: 20px;
        margin-bottom: 20px;
        border: 3px solid #315cfd;
        transition: all 0.3s;
        font-weight: 700;
        background: #4FD1C5;
        background: linear-gradient(90deg, rgb(210 205 113) 0%, rgb(223 52 93) 100%);
    }

        .btn-open:hover {
            color: #fff;
            transform: translateY(-6px);
            font-size: 18px;
        }

    #webcam-container {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 400px;
        height: 400px;
        border: 2px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        margin: 0 auto;
        margin-bottom: 20px;
    }
</style>
<div class="container">
    <div class="row">
        <div class="col-lg-12 col-sm-12 col-xs-12" style="position:relative;">
            <img src="~/Content/images/gif/spyro-the-dragon-purple-dragon.gif" alt="results" style="width:20%; position: absolute; left: -270px; top: 50px" />
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 col-sm-12 col-xs-12">

            <div class="border-title">
                <div class="container_title">
                    <h2 class="title" style="font-size: 44px;">
                        <span class="title-word title-word-1">I</span>
                        <span class="title-word title-word-2">D</span>
                        <span class="title-word title-word-3">E</span>
                        <span class="title-word title-word-4">N</span>
                        <span class="title-word title-word-1">T</span>
                        <span class="title-word title-word-2">I</span>
                        <span class="title-word title-word-3">F</span>
                        <span class="title-word title-word-4">Y</span>
                    </h2>
                </div>
            </div>

        </div>
    </div>
    <div class="row background_identify">
        <div class="row">
            <div class="col-lg-12 col-sm-12 col-xs-12">
                <h3 class="animate-charcter center-block text-center">
                    Identify objects in English
                </h3>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-2 col-sm-2 col-xs-0">

            </div>
            <div class="col-lg-8 col-sm-8 col-xs-12">
                <button type="button" class="center-block text-center btn-open bx-flashing-hover" style="width: 80%;" onclick="init()">Open Camera</button>
                <div id="webcam-container" class="center-block text-center" style="width: 90%;"></div>
                <div id="label-container" class="animate-charcter center-block text-center"></div>

                @*đang gặp trường hợp add vào thì có lúc được có lúc không
                    link thì gặp kí tự đặc biệt không được
                    dùng rut gọn link để fix*@
                @*<script src="~/Scripts/tensorflow.js"></script>
                    <script src="~/Scripts/teachablemachine.js"></script>*@
                <script src="https://s.net.vn/lAlC"></script>
                <script src="https://s.net.vn/KB0k"></script>


                <script src="https://code.responsivevoice.org/responsivevoice.js?key=ydjEgraa"></script>
                <script type="text/javascript">
                    // Các hàm API khác tại đây:
                    // https://github.com/googlecreativelab/teachablemachine-community/tree/master/libraries/image

                    // liên kết đến mô hình của bạn do bảng xuất khẩu Teachable Machine cung cấp
                    const URL = "https://teachablemachine.withgoogle.com/models/9akuzbZQJ/";

                    let model, webcam, labelContainer, maxPredictions;
                    let lastLabel = '';

                    // Tải mô hình hình ảnh và thiết lập webcam
                    async function init() {
                        const modelURL = URL + "model.json";
                        const metadataURL = URL + "metadata.json";

                        // tải mô hình và siêu dữ liệu
                        // Tham khảo tmImage.loadFromFiles() trong API để hỗ trợ tệp từ bộ chọn tệp
                        // hoặc các tệp từ ổ cứng cục bộ của bạn
                        // Lưu ý: thư viện pose thêm đối tượng "tmImage" vào cửa sổ của bạn (window.tmImage)
                        model = await tmImage.load(modelURL, metadataURL);

                        maxPredictions = model.getTotalClasses();

                        // Chức năng tiện lợi để thiết lập webcam
                        const flip = true; // có lật webcam không
                        webcam = new tmImage.Webcam(400, 400, flip); // chiều rộng, chiều cao, lật
                        await webcam.setup(); // yêu cầu quyền truy cập vào webcam
                        await webcam.play();
                        window.requestAnimationFrame(loop);

                        // nối các phần tử vào DOM
                        document.getElementById("webcam-container").appendChild(webcam.canvas);
                        labelContainer = document.getElementById("label-container");
                    }

                    async function loop() {
                        webcam.update(); // cập nhật khung webcam
                        await predict();
                        window.requestAnimationFrame(loop);
                    }

                    // chạy hình ảnh webcam thông qua mô hình hình ảnh
                    async function predict() {
                        // dự đoán có thể lấy phần tử html hình ảnh, video hoặc canvas
                        const predictions = await model.predictTopK(webcam.canvas, 1);

                        const label = predictions[0].className;
                        if (label !== lastLabel) {
                            lastLabel = label;
                            responsiveVoice.speak(label, "UK English Male");
                            labelContainer.innerText = predictions[0].className;
                        }
                    }
                </script>
            </div>
            <div class="col-lg-2 col-sm-2 col-xs-0">

            </div>
        </div>
    </div>
</div>

