@model EnglishForKids_LMN.Models.UserBonus
@{ Layout = null; }
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/Style.css" rel="stylesheet" />
    <link href="~/Content/Style.css" rel="stylesheet" />
    <link href="~/Content/asset/signin.css" rel="stylesheet" />
    <link href="~/Content/asset/reponsive_signin_signup.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700;800&display=swap" rel="stylesheet">
    <title>Change Password - English For Kids</title>
</head>
<body>
    @using (Html.BeginForm("ChangePassword", "Login", FormMethod.Post))
    {
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="container">
        <div class="row">
            <div class="col-lg-12 col-sm-12 col-xs-12">                
                <div class="form-dangnhap" style="width: 100%;">
                    @Html.HiddenFor(model => model.User_Mail, new { htmlAttributes = new { @class = "form-control", @placeholder = "Type your gmail ...", @maxlength = "30" } })
                    <div class="text-center">
                        <h1 class="logIn animate-charcter" style="font-size: 40px;">Change password</h1>
                    </div>
                    <div class="text-center">
                        <p style="font-size:20px;"><b>@Model.User_Mail</b></p>
                    </div>
                    <br />
                    <p>
                        <strong>
                            @Html.LabelFor(model => model.User_Password)
                        </strong>
                        @Html.ValidationMessageFor(model => model.User_Password, "", new { @class = "text-danger" })
                    </p>
                    <div class="input-group">
                        @Html.EditorFor(model => model.User_Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Type new your password ...", @minlength = "5", @maxlength = "10", @autofocus = "autofocus", @required = "required" } })
                        <span class="input-group-addon">
                            <i class="glyphicon glyphicon-lock "></i>
                        </span>
                    </div>
                    <br />
                    <p>
                        <strong>
                            @Html.LabelFor(model => model.Check_Password)
                        </strong>
                        <font style="color:red;"> @ViewData["NotEqual"]</font> @Html.ValidationMessageFor(model => model.Check_Password, "", new { @class = "text-danger" })
                    </p>
                    <div class="input-group">
                        @Html.EditorFor(model => model.Check_Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Type new your password again ...", @minlength = "5", @maxlength = "10", @required = "required" } })
                        <span class="input-group-addon">
                            <i class="glyphicon glyphicon-lock "></i>
                        </span>
                    </div>
                    <br />
                    <input type="checkbox" onclick="myfunction()" /> Show password
                    <br />
                    <div class="row">
                        <div class="col-lg-12 col-sm-12 col-xs-12">
                            <div class="wrap">
                                <input type="submit" name="ChangePassword" value="Confirm" class="button" style="width:100%" />
                            </div>                            
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
                @*<div class="mydiv center-block" style="margin-top: 10%;">
                    @Html.HiddenFor(model => model.User_Mail, new { htmlAttributes = new { @class = "form-control", @placeholder = "Type your gmail ...", @maxlength = "30" } })
                    <h4 style="text-align:center;">Change password for @Model.User_Mail</h4>
                    <br />
                    <p><strong>@Html.LabelFor(model => model.User_Password)</strong> @Html.ValidationMessageFor(model => model.User_Password, "", new { @class = "text-danger" })</p>
                    <div class="input-group">
                        @Html.EditorFor(model => model.User_Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Type new password ...", @maxlength = "10" } })
                        <span class="input-group-addon">
                            <i class="glyphicon glyphicon-lock "></i>
                        </span>
                    </div>
                    <br />
                    <p><strong>@Html.LabelFor(model => model.Check_Password)</strong><font style="color:red;"> @ViewData["NotEqual"]</font> @Html.ValidationMessageFor(model => model.Check_Password, "", new { @class = "text-danger" })</p>
                    <div class="input-group">
                        @Html.EditorFor(model => model.Check_Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Type new password ...", @maxlength = "10" } })
                        <span class="input-group-addon">
                            <i class="glyphicon glyphicon-lock "></i>
                        </span>
                    </div>
                    <br />
                    <input type="checkbox" onclick="myfunction()" /> Show Password
                    <br />
                    <br />
                    <input type="submit" name="ChangePassword" value="Confirm" class="btn btn-info" style="width:100%;max-width:100%;" />
                    <br />
                    <br />
                </div>*@
                }
    <script>
        function myfunction() {
            var x = document.getElementById("Check_Password");
            var y = document.getElementById("User_Password");
            if (x.type == "password" && y.type == "password") {
                x.type = "text";
                y.type = "text";
            }
            else {
                x.type = "password";
                y.type = "password";
            }
        }
    </script>
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
</body>
</html>

